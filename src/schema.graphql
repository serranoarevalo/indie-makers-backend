type CreateGoalResponse {
  ok: Boolean!
  error: String
  goal: Goal
}

type Mutation {
  CreateGoal(text: String!, productId: Int!): CreateGoalResponse!
  DeleteGoal(goalId: Int!): DeleteGoalResponse!
  EditGoal(goaldId: Int!, text: String, isCompleted: Boolean): EditGoalResponse!
  CreateProduct(name: String!, description: String!, needsHelp: Boolean!, website: String, logo: String): CreateProductResponse!
  DeleteProduct(productId: Int!): DeleteProductResponse!
  EditProduct(productId: Int!, name: String, description: String, isLaunched: Boolean, needsHelp: Boolean, website: String, logo: String): EditProductResponse!
  ConnectFB(firstName: String!, lastName: String!, email: String, fbId: String!): ConnectFBResponse!
  EditUser(username: String, homepage: String, bio: String): EditUserResponse!
}

type DeleteGoalResponse {
  ok: Boolean!
  error: String
}

type EditGoalResponse {
  ok: Boolean!
  error: String
}

enum GoalStatus {
  PENDING
  COMPLETED
}

type FilterGoalsResponse {
  ok: Boolean!
  error: String
  makers: [User]
}

type Query {
  FilterGoals(status: GoalStatus!, page: Int, take: Int): FilterGoalsResponse!
  GetLatestGoals: GetLatestGoalsResponse!
  FilterProducts(status: ProductState!, page: Int, take: Int): FilterProductsResponse!
  GetLatestProducts(take: Int, page: Int): GetLatestProductsResponse!
  GetProduct(id: Int!): GetProductResponse!
  CheckUsername(username: String!): CheckUsernameResponse!
  FilterUsers(status: UserState!, page: Int, take: Int): FilterUsersResponse!
  GetMaker(username: String!): GetMakerResponse!
}

type GetLatestGoalsResponse {
  ok: Boolean!
  error: String
  goals: [Goal]
}

type Goal {
  id: Int!
  createdAt: String!
  updatedAt: String
  text: String!
  isCompleted: Boolean!
  makerId: Int!
  maker: User
  productId: Int!
  product: Product
}

type CreateProductResponse {
  ok: Boolean!
  error: String
  product: Product
}

type DeleteProductResponse {
  ok: Boolean!
  error: String
}

type EditProductResponse {
  ok: Boolean!
  error: String
}

enum ProductState {
  NEW
  UPDATED
  LAUNCHED
  HELP
  FEATURED
}

type FilterProductsResponse {
  ok: Boolean!
  error: String
  products: [Product]
}

type GetLatestProductsResponse {
  ok: Boolean!
  error: String
  products: [Product]
}

type GetProductResponse {
  ok: Boolean!
  error: String
  product: Product
}

type Product {
  id: Int!
  createdAt: String!
  updatedAt: String
  name: String!
  description: String!
  isLaunched: Boolean!
  needsHelp: Boolean!
  isFeatured: Boolean!
  website: String
  logo: String
  makerId: Int!
  maker: User
  goals: [Goal]
  goalCount: Int!
  pendingGoalCount: Int!
  completedGoalCount: Int!
  slug: String!
  pendingGoals: [Goal]
  completedGoals: [Goal]
}

type CheckUsernameResponse {
  ok: Boolean!
  available: Boolean
  error: String
}

type ConnectFBResponse {
  ok: Boolean!
  error: String
  token: String
  new: Boolean!
}

type EditUserResponse {
  ok: Boolean!
  error: String
}

enum UserState {
  FIRE
  SHIPPED
}

type FilterUsersResponse {
  ok: Boolean!
  error: String
  makers: [User]
}

type GetMakerResponse {
  ok: Boolean!
  error: String
  maker: User
}

type User {
  id: Int!
  email: String
  username: String
  firstName: String!
  lastName: String!
  homepage: String
  fbId: String!
  bio: String
  products: [Product]
  launchedProductCount: Int!
  goals: [Goal]
  fullName: String!
  profilePhoto: String!
  streak: Int!
  pendingGoals: [Goal]
  completedGoals: [Goal]
  createdAt: String!
  updatedAt: String
}
