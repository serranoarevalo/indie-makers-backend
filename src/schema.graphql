type Goal {
  id: Int!
  createdAt: String!
  updatedAt: String
  text: String!
  isCompleted: Boolean!
  makerId: Int!
  maker: User
  productId: Int!
  product: Product
}

enum ProductState {
  NEW
  UPDATED
  LAUNCHED
  HELP
  FEATURED
}

type FilterProductsResponse {
  ok: Boolean!
  error: String
  products: [Product]
}

type Query {
  FilterProducts(state: ProductState!): FilterProductsResponse!
  CheckUsername(username: String!): CheckUsernameResponse!
  GetMaker(username: String!): GetMakerResponse!
}

type Product {
  id: Int!
  createdAt: String!
  updatedAt: String
  name: String!
  description: String!
  isLaunched: Boolean!
  needsHelp: Boolean!
  isFeatured: Boolean!
  website: String
  logo: String
  makerId: Int!
  maker: User
  goals: [Goal]
  goalCount: Int!
  pendingGoalCount: Int!
  completedGoalCount: Int!
  slug: String!
  pendingGoals: [Goal]
  completedGoals: [Goal]
}

type CheckUsernameResponse {
  ok: Boolean!
  available: Boolean
  error: String
}

type ConnectFBResponse {
  ok: Boolean!
  error: String
  token: String
  new: Boolean!
}

type Mutation {
  ConnectFB(firstName: String!, lastName: String!, email: String, fbId: String!): ConnectFBResponse!
}

type GetMakerResponse {
  ok: Boolean!
  error: String
  maker: User
}

type User {
  id: Int!
  email: String
  username: String
  firstName: String!
  lastName: String!
  homepage: String
  fbId: String!
  bio: String
  products: [Product]
  launchedProductCount: Int!
  goals: [Goal]
  fullName: String!
  profilePhoto: String!
  strike: Int!
  pendingGoals: [Goal]
  completedGoals: [Goal]
  createdAt: String!
  updatedAt: String
}
